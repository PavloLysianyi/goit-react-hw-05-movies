{"version":3,"file":"static/js/730.3826ad9f.chunk.js","mappings":"yNAiDA,UA7Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAqBpB,OAnBAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEIC,MAAM,sCAADC,OACYpB,EAAO,qBAAAoB,OAAoBC,EAAAA,IACjE,KAAD,EAFa,KAARP,EAAQE,EAAAM,MAIDC,GAAG,CAADP,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACMJ,EAASU,OAAO,KAAD,EAA5BT,EAAIC,EAAAM,KACVf,EAAQQ,EAAKT,MAAM,OAAAU,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAGrBU,QAAQC,MAAM,6BAA4BX,EAAAS,IAAS,yBAAAT,EAAAY,OAAA,GAAAf,EAAA,mBAEtD,kBAbmB,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAepBrB,GACF,GAAG,CAACT,KAGF+B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SACG1B,EAAK4B,KAAI,SAAAC,GAAK,OACbF,EAAAA,EAAAA,KAAA,MAAAD,SACGG,EAAMC,eACLL,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAL,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEK,IAAG,mCAAAlB,OAAqCe,EAAMC,cAC9CG,IAAG,GAAAnB,OAAKe,EAAMK,KAAI,eAEpBP,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAMK,WAPPL,EAAMM,GAUV,QAKf,C,sDC/CO,IAAMpB,EAAS,kC","sources":["components/Cast.js","components/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiKey } from './api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setCast(data.cast);\n        }\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            {actor.profile_path && (\n              <>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                  alt={`${actor.name} Profile`}\n                />\n                <p>{actor.name}</p>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","export const apiKey = 'a489cf0433455f138fd59ea00245d30d';\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","apiKey","sent","ok","json","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","map","actor","profile_path","_Fragment","src","alt","name","id"],"sourceRoot":""}