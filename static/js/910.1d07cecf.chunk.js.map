{"version":3,"file":"static/js/910.1d07cecf.chunk.js","mappings":"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","sources":["components/Cast.js","components/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from './api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCastData = async () => {\n      try {\n        const data = await fetchMovieCast(movieId);\n        setCast(data);\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n      }\n    };\n\n    fetchCastData();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            {actor.profile_path && (\n              <>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                  alt={`${actor.name} Profile`}\n                />\n                <p>{actor.name}</p>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","export const apiKey = 'a489cf0433455f138fd59ea00245d30d';\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n    );\n\n    if (response.ok) {\n      const data = await response.json();\n      return data.cast;\n    }\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n    );\n\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    }\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`\n    );\n\n    if (response.ok) {\n      const data = await response.json();\n      const filteredMovies = data.results.filter(movie => movie.title);\n      return filteredMovies;\n    }\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n    );\n\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    }\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchSearchMovies = async searchTerm => {\n  try {\n    const endpoint = searchTerm\n      ? `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}`\n      : `https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`;\n\n    const response = await fetch(endpoint);\n\n    if (response.ok) {\n      const data = await response.json();\n      return data.results;\n    }\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCastData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieCast","sent","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","map","actor","profile_path","_Fragment","src","concat","alt","name","id","apiKey","response","fetch","ok","json","abrupt","_x","fetchMovieReviews","_ref2","_callee2","_context2","results","_x2","fetchTrendingMovies","_ref3","_callee3","filteredMovies","_context3","filter","movie","title","fetchMovieDetails","_ref4","_callee4","_context4","_x3","fetchSearchMovies","_ref5","_callee5","searchTerm","endpoint","_context5","_x4","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}