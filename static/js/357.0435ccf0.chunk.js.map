{"version":3,"file":"static/js/357.0435ccf0.chunk.js","mappings":"yNA8CA,UA1CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAqB1B,OAnBAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,MAAM,sCAADC,OACYpB,EAAO,qBAAAoB,OAAoBC,EAAAA,IACjE,KAAD,EAFa,KAARP,EAAQE,EAAAM,MAIDC,GAAG,CAADP,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACMJ,EAASU,OAAO,KAAD,EAA5BT,EAAIC,EAAAM,KACVf,EAAWQ,EAAKU,SAAS,OAAAT,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAG3BW,QAAQC,MAAM,gCAA+BZ,EAAAU,IAAS,yBAAAV,EAAAa,OAAA,GAAAhB,EAAA,mBAEzD,kBAbsB,OAAAH,EAAAoB,MAAA,KAAAC,UAAA,KAevBtB,GACF,GAAG,CAACT,KAGFgC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACH3B,EAAQ6B,OAAS,GAChBD,EAAAA,EAAAA,KAAA,MAAAD,SACG3B,EAAQ8B,KAAI,SAAAC,GAAM,OACjBL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAII,EAAOC,UACXJ,EAAAA,EAAAA,KAAA,KAAAD,SAAII,EAAOE,YAFJF,EAAOG,GAGX,OAITN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2CAIX,C,sDC5CO,IAAMZ,EAAS,kC","sources":["components/Reviews.js","components/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiKey } from './api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setReviews(data.results);\n        }\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","export const apiKey = 'a489cf0433455f138fd59ea00245d30d';\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","apiKey","sent","ok","json","results","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","length","map","review","author","content","id"],"sourceRoot":""}