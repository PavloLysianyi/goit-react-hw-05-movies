{"version":3,"file":"static/js/385.210d087a.chunk.js","mappings":"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","sources":["components/Cast.js","components/MovieDetails.js","components/Reviews.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const apiKey = 'a489cf0433455f138fd59ea00245d30d';\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setCast(data.cast);\n        }\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>{actor.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link, Routes, Route } from 'react-router-dom';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const apiKey = 'a489cf0433455f138fd59ea00245d30d';\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setMovieDetails(data);\n        }\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>{movieDetails.title}</h2>\n      <p>{movieDetails.overview}</p>\n\n      {/* Додаємо кнопки для переходу на сторінки Cast та Reviews */}\n      <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n      <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n\n      {/* Додаємо роути для відображення акторського складу та відгуків */}\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const apiKey = 'a489cf0433455f138fd59ea00245d30d';\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setReviews(data.results);\n        }\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","ok","json","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","map","actor","name","id","movieDetails","setMovieDetails","fetchMovieDetails","title","overview","Link","to","Routes","Route","path","element","Cast","Reviews","reviews","setReviews","fetchMovieReviews","results","review","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}